on:
  release:
    types: [published]

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: takutakahashi/oci-image-operator
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
          echo ::set-output name=IMAGE_NAME::${IMAGE_NAME}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: takutakahashi
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Build:image'
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/${{ steps.branch_name.outputs.IMAGE_NAME }}/manager:${{ steps.branch_name.outputs.SOURCE_TAG }}
      - name: 'Build:image:actor-base'
        uses: docker/build-push-action@v2
        with:
          push: true
          file: actor/base/Dockerfile
          context: .
          tags: ghcr.io/${{ steps.branch_name.outputs.IMAGE_NAME }}/actor-base:${{ steps.branch_name.outputs.SOURCE_TAG }}
      - name: 'Build:image:actor-registryv2'
        uses: docker/build-push-action@v2
        with:
          push: true
          file: actor/registryv2/Dockerfile
          context: .
          tags: ghcr.io/${{ steps.branch_name.outputs.IMAGE_NAME }}/actor-registryv2:${{ steps.branch_name.outputs.SOURCE_TAG }}
      - name: 'Build:image:actor-github'
        uses: docker/build-push-action@v2
        with:
          push: true
          file: actor/github/Dockerfile
          context: .
          tags: ghcr.io/${{ steps.branch_name.outputs.IMAGE_NAME }}/actor-github:${{ steps.branch_name.outputs.SOURCE_TAG }}

      - name: Build manifests
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          make release IMG=ghcr.io/${{ steps.branch_name.outputs.IMAGE_NAME }}/manager:${GITHUB_REF#refs/tags/}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./release.yaml
          asset_name: release.yaml
          asset_content_type: application/x-yaml

